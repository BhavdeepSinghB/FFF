{"ast":null,"code":"var _jsxFileName = \"/Users/yanlos/Documents/GitHub/FFF/src/SidebarRight.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state'; // import ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport { sizing } from '@material-ui/system';\nimport SimpleDiscount from './SimpleDiscount';\nimport Popup from './Popup'; // <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n\nconst drawerWidth = 360;\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  list: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    margin: theme.spacing(10)\n  },\n  toolbar: theme.mixins.toolbar\n}));\nexport default function SidebarLeft() {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    anchor: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(PopupState, {\n    variant: \"popover\",\n    popupId: \"post-popover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, popupState => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Button, Object.assign({\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button\n  }, bindTrigger(popupState), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), \"Make a Post?\"), React.createElement(Popover, Object.assign({}, bindPopover(popupState), {\n    anchorReference: \"anchorPosition\",\n    anchorPosition: {\n      top: window.innerHeight / 2,\n      left: window.innerWidth / 2\n    },\n    anchorOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, ['About Us', 'GitHub', 'Resumes'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/Users/yanlos/Documents/GitHub/FFF/src/SidebarRight.js"],"names":["React","makeStyles","Drawer","List","Divider","ListItem","Button","Popover","PopupState","bindTrigger","bindPopover","ListItemText","Grid","sizing","SimpleDiscount","Popup","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","list","height","display","flexDirection","justifyContent","button","margin","spacing","toolbar","mixins","SidebarLeft","classes","paper","popupState","top","window","innerHeight","left","innerWidth","vertical","horizontal","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport { sizing } from '@material-ui/system';\n\nimport SimpleDiscount from './SimpleDiscount';\nimport Popup from './Popup';\n\n// <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n\nconst drawerWidth = 360;\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  list: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    margin: theme.spacing(10),\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nexport default function SidebarLeft() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"right\"\n      >\n      <div className={classes.toolbar} />\n      <PopupState variant=\"popover\" popupId=\"post-popover\">\n       {popupState => (\n         <div>\n           <Button variant=\"contained\"\n              color=\"primary\" className={classes.button}\n              {...bindTrigger(popupState)}\n           >\n             Make a Post?\n           </Button>\n           <Popover\n             {...bindPopover(popupState)}\n             anchorReference=\"anchorPosition\"\n             anchorPosition={{ top: window.innerHeight/2, left: window.innerWidth/2 }}\n             anchorOrigin={{\n               vertical: 'center',\n               horizontal: 'center',\n             }}\n             transformOrigin={{\n               vertical: 'center',\n               horizontal: 'center',\n             }}\n           >\n              <Popup />\n           </Popover>\n         </div>\n        )}\n       </PopupState>\n        <Divider />\n        <List className={classes.list}>\n          {['About Us', 'GitHub', 'Resumes'].map((text, index) => (\n            <ListItem button key={text}>\n\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}